version: "3.8"

services:
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "5173:5173"
    volumes:
      - ./backend/uploads:/app/uploads
      - ./frontend:/app
      - /app/node_modules
    environment:
      - VITE_API_URL=http://backend:8080

  backend:
    build: ./backend
    ports:
      - "8080:8080"
    depends_on:
      - db
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://db:5432/groupmeet
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=postgres
      - SERVER_PORT=8080
      # CORS Configuration
      - JWT_SECRET=${JWT_SECRET:-SOMECREATEDKEYWHICHISNOTEXPOSEDANDSHOULDBEGENERATEDWITHCOMMANDLIKETHISOPENSSLGENRSA-OUTPRIVATEKEY.PEM-ALGORITHMRS256}
      - JWT_EXPIRATION_MS=${JWT_EXPIRATION_MS:-3600000} # 1 hour then relog
      # CORS
      - CORS_ENVIRONMENT=${CORS_ENVIRONMENT:-local}
      - FRONTEND_DEV_URL=${FRONTEND_DEV_URL:-http://localhost:5173}
      - FRONTEND_DOCKER_URL=${FRONTEND_DOCKER_URL:-http://frontend:5173}
      - FRONTEND_PROD_URL=${FRONTEND_PROD_URL:-https://example.com} # TODO: replace with actual production URL later
      # SMTP Configuration for sending emails
      - SPRING_MAIL_HOST=smtp-relay.brevo.com
      - SPRING_MAIL_PORT=587
      - SPRING_MAIL_USERNAME=${SMTP_LOGIN}
      - SPRING_MAIL_PASSWORD=${SMTP_MASTER_PASSWORD}
      - APP_MAIL_SENDER_ADDRESS=${APP_MAIL_SENDER_ADDRESS}

  db:
    image: postgres:15-alpine
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_DB=groupmeet
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data

volumes:
  postgres_data:
